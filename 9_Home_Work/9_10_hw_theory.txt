0) Итератор - это такой интерфейс, который позволяет перемещаться (итерироваться) по элементам некоторой последовательности, указывает на них и похзволяет перемещаться вперёд или назад. Пусть у нас есть контейнер с некоторыми элементами. Мы хотим сослаться не на весь контейнер, а на какую-то его часть. От этого места нашего контейнера мы можем перейти вперёд или назад по контейнеру и изменить что-то. По свойствам он похож на указатели. Есть разные типы итераторов:
Входной (input) - итератор, предназначенный только для чтения, но не изменения. Он является ожнонаправленным, то есть с помощью префиксной или постфиксной формы оператора ++ передвигается по структуре только в одну сторону, причём последовательность считываемых элементов не гарантирует строгий порядок. 
Выходной (output) - итератор на перезапись, то есть возможно не только чтение, но и правка, так же является однонаправленным и определена операция ++.
Однонаправленный. Почти то же самое, что input и output вместе, только оно как раз гарантирует, что последовательность чтения одинакова, то есть пройдя по последовательности дважды, чтение элементов будет выполоняться по одному и тому же порядку.
Двунаправленный. Существует помимо постфиксной и префиксной операции ++ такая операция как --, которая позволяет двигаться в обе стороны, а не только вперёд. с произвольным доступом 	Читают и пишут значения с произвольным доступом. Самые мощные итераторы, сочетающие функциональность двунаправленных итераторов и возможность выполнения арифметики указателей и сравнений указателей.
С произвольным доступом. Читают и пишут значения с произвольным доступом. Самые мощные итераторы, сочетающие функциональность двунаправленных итераторов и все необходимые арифметические действия и сравнения, как для указателей.

1) Стандартная библиотека шаблонов (STL) - это набор согласованных обобщённых алгоритмов, контейнеров, средств доступа к их содержимому и различных вспомогательных функций в C++. В библиотеке выделяют пять основных компонентов:
Контейнер — хранение набора объектов в памяти.
Итератор — обеспечение средств доступа к содержимому контейнера.
Алгоритм — определение вычислительной процедуры.
Адаптер — адаптация компонентов для обеспечения различного интерфейса.
Функциональный объект — сокрытие функции в объекте для использования другими компонентами.

2) В STL содержатся следующие классы (некоторые из них)
    array
    list
    dequeue - двусторонняя очередь
    vector, vector<bool> (вроже бы это как массив, только с разного рода плюшками, типа автоматического изменения длины массива при добавлении или удалении объекта)
    map - упорядоченный массив пар элементов, который состоит из ключа и самого элемента, отождествялемого с этим ключом, уникальность ключей
    set - упорядоченное множество объектов, множество это не набор, а значит это гарантирует уникальность элементов
    multimap - map, в котором можно хранить одинаковые ключи
    multiset - набор элементов, то бишь не сохранена уникальность оъектов
    stack
    priority_queue - очередь с приоритетом
    queue

3) Библиотека сожержит так же помимо шаблонов класса строковый поток (strstream), алгоритмы - они нужны для того, чтобы оптимально работаь с шаблонами класса, входят туда такие алгоритмы как методы перебора элементов (transform, for_each), методы сортировки (sort, binary_search)  и другие алгоритмы, коих очень много. Так же там сожержатся функторы.